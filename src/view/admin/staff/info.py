# Form implementation generated from reading ui file 'info.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import Qt
import sys
import os
import pyperclip

sys.path.append(
    os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "..", ".."))
)
from src.controller.staff_controller import StaffController
from src.model.staff import Staff
from src.util import toast


class Ui_info(object):

    def __init__(self):
        self.staffController = StaffController()
        self.block = None
        self.clickRow = None

    def setupUi(self, info):
        info.setObjectName("info")
        info.resize(997, 669)
        info.setStyleSheet(
            "QLabel{font-size: 16px}    QLineEdit, QComboBox{border-radius: 10px; padding: 5px 10px; font-size: 15px}    QPushButton{font-size: 16px; border-radius: 5px}    QRadioButton{font-size: 16px}"
        )

        self.table = QtWidgets.QTableWidget(info)
        self.table.setGeometry(QtCore.QRect(0, 110, 571, 561))
        self.table.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.table.setAutoFillBackground(False)
        self.table.setObjectName("table")
        self.table.setColumnCount(4)
        self.table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        self.table.horizontalHeader().setVisible(True)
        self.table.horizontalHeader().setCascadingSectionResizes(False)
        self.table.horizontalHeader().setHighlightSections(False)
        self.table.horizontalHeader().setSortIndicatorShown(False)
        self.table.horizontalHeader().setStretchLastSection(True)
        self.table.verticalHeader().setVisible(False)
        self.label = QtWidgets.QLabel(info)
        self.label.setGeometry(QtCore.QRect(40, 30, 141, 41))
        self.label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label.setAutoFillBackground(False)
        self.label.setObjectName("label")
        self.find_id = QtWidgets.QLineEdit(info)
        self.find_id.setGeometry(QtCore.QRect(150, 30, 201, 31))
        self.find_id.setObjectName("find_id")
        self.find_name = QtWidgets.QLineEdit(info)
        self.find_name.setGeometry(QtCore.QRect(550, 30, 231, 31))
        self.find_name.setObjectName("find_name")
        self.label_2 = QtWidgets.QLabel(info)
        self.label_2.setGeometry(QtCore.QRect(430, 30, 141, 41))
        self.label_2.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_2.setAutoFillBackground(False)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(info)
        self.label_3.setGeometry(QtCore.QRect(590, 110, 141, 41))
        self.label_3.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_3.setAutoFillBackground(False)
        self.label_3.setObjectName("label_3")
        self.idnv = QtWidgets.QLineEdit(info)
        self.idnv.setGeometry(QtCore.QRect(710, 110, 201, 31))
        self.idnv.setReadOnly(True)
        self.idnv.setObjectName("idnv")
        self.name = QtWidgets.QLineEdit(info)
        self.name.setGeometry(QtCore.QRect(710, 170, 201, 31))
        self.name.setText("")
        self.name.setReadOnly(False)
        self.name.setObjectName("name")
        self.label_4 = QtWidgets.QLabel(info)
        self.label_4.setGeometry(QtCore.QRect(640, 170, 61, 41))
        self.label_4.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setObjectName("label_4")
        self.sdt = QtWidgets.QLineEdit(info)
        self.sdt.setGeometry(QtCore.QRect(710, 230, 201, 31))
        self.sdt.setText("")
        self.sdt.setReadOnly(False)
        self.sdt.setObjectName("sdt")
        self.label_5 = QtWidgets.QLabel(info)
        self.label_5.setGeometry(QtCore.QRect(650, 230, 51, 41))
        self.label_5.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setObjectName("label_5")
        self.email = QtWidgets.QLineEdit(info)
        self.email.setGeometry(QtCore.QRect(710, 290, 201, 31))
        self.email.setText("")
        self.email.setReadOnly(False)
        self.email.setObjectName("email")
        self.label_6 = QtWidgets.QLabel(info)
        self.label_6.setGeometry(QtCore.QRect(640, 290, 51, 41))
        self.label_6.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_6.setAutoFillBackground(False)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(info)
        self.label_7.setGeometry(QtCore.QRect(620, 340, 71, 41))
        self.label_7.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_7.setAutoFillBackground(False)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(info)
        self.label_8.setGeometry(QtCore.QRect(630, 390, 51, 41))
        self.label_8.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_8.setAutoFillBackground(False)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(info)
        self.label_9.setGeometry(QtCore.QRect(600, 430, 81, 41))
        self.label_9.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_9.setAutoFillBackground(False)
        self.label_9.setObjectName("label_9")
        self.block_radio = QtWidgets.QRadioButton(info)
        self.block_radio.setGeometry(QtCore.QRect(720, 440, 95, 21))
        self.block_radio.setEnabled(True)
        self.block_radio.setChecked(False)
        self.block_radio.setObjectName("block")
        self.save = QtWidgets.QPushButton(info)
        self.save.setGeometry(QtCore.QRect(590, 500, 93, 41))
        self.save.setStyleSheet("background-color: #4dd4ac")
        self.save.setObjectName("pushButton")
        self.block_btn = QtWidgets.QPushButton(info)
        self.block_btn.setGeometry(QtCore.QRect(870, 500, 93, 41))
        self.block_btn.setStyleSheet("background-color: #e35d6a")
        self.block_btn.setObjectName("pushButton_2")
        self.rePassword = QtWidgets.QPushButton(info)
        self.rePassword.setGeometry(QtCore.QRect(720, 500, 121, 41))
        self.rePassword.setStyleSheet("background-color: #ffcd39")
        self.rePassword.setObjectName("pushButton_3")
        self.groupBox = QtWidgets.QGroupBox(info)
        self.groupBox.setGeometry(QtCore.QRect(710, 340, 171, 41))
        self.groupBox.setStyleSheet("border: none")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.nu = QtWidgets.QRadioButton(parent=self.groupBox)
        self.nu.setGeometry(QtCore.QRect(90, 10, 61, 20))
        self.nu.setObjectName("nu")
        self.nam = QtWidgets.QRadioButton(parent=self.groupBox)
        self.nam.setGeometry(QtCore.QRect(10, 10, 71, 20))
        self.nam.setObjectName("nam")
        self.find = QtWidgets.QPushButton(info)
        self.find.setGeometry(QtCore.QRect(820, 30, 93, 31))
        self.find.setStyleSheet("background-color: #4dd4ac")
        self.find.setObjectName("pushButton_4")
        self.rank = QtWidgets.QComboBox(info)
        self.rank.setGeometry(QtCore.QRect(710, 391, 201, 31))
        self.rank.setObjectName("rank")
        self.rank.addItem("")

        self.retranslateUi(info)
        QtCore.QMetaObject.connectSlotsByName(info)

    def retranslateUi(self, info):
        _translate = QtCore.QCoreApplication.translate
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("info", "Mã nhân viên"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("info", "Họ tên"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("info", "Email"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("info", "Hành động"))
        self.label.setText(_translate("info", "Mã nhân viên"))
        self.label_2.setText(_translate("info", "Tên nhân viên"))
        self.label_3.setText(_translate("info", "Mã nhân viên"))
        self.label_4.setText(_translate("info", "Họ tên"))
        self.label_5.setText(_translate("info", "SĐT"))
        self.label_6.setText(_translate("info", "Email"))
        self.label_7.setText(_translate("info", "Giới tính"))
        self.label_8.setText(_translate("info", "Quyền"))
        self.label_9.setText(_translate("info", "Trạng thái"))
        self.block_radio.setText(_translate("info", "Nghỉ việc"))
        self.save.setText(_translate("info", "Lưu"))
        self.block_btn.setText(_translate("info", "Nghỉ việc"))
        self.rePassword.setText(_translate("info", "Cấp mật khẩu"))
        self.nu.setText(_translate("info", "Nữ"))
        self.nam.setText(_translate("info", "Nam"))
        self.find.setText(_translate("info", "Tìm"))
        self.rank.setItemText(0, _translate("info", "Staff"))

        self.customSetUp()
        self.setEvents()
        self.showAllStaff()

    def customSetUp(self):
        self.table.horizontalHeader().setSectionResizeMode(
            QtWidgets.QHeaderView.ResizeMode.Stretch
        )

    def setEvents(self):
        self.find.mousePressEvent = self.findStaff
        self.save.mousePressEvent = self.updateStaff
        self.rePassword.mousePressEvent = self.updatePassword
        self.block_btn.mousePressEvent = self.blockStaff
        self.block_radio.mousePressEvent = self.banChangeBlock

    def addTableData(self, data):
        try:
            self.table.setRowCount(len(data))
            for row_num, row_data in enumerate(data):
                for col_num, col_data in enumerate(row_data):
                    self.table.setItem(
                        row_num, col_num, QtWidgets.QTableWidgetItem(col_data)
                    )
                # Tạo nút và thêm vào cột "Hành động"
                btn = QtWidgets.QPushButton("Xem")
                btn.setStyleSheet(
                    "background-color: #6edff6; font-size: 16px; border-radius: 5px; padding: 5px 10px; "
                )
                btn.clicked.connect(self.showInfoStaff(row_num))

                # Tạo widget và layout để chứa nút
                widget = QtWidgets.QWidget()
                layout = QtWidgets.QHBoxLayout()
                layout.addWidget(btn)
                layout.setAlignment(Qt.AlignmentFlag.AlignCenter)  # Căn giữa nút
                layout.setContentsMargins(5, 2, 5, 2)  # Loại bỏ lề của layout
                widget.setLayout(layout)

                self.table.setCellWidget(row_num, 3, widget)
        except Exception as e:
            print(e)
            return

    def showInfoStaff(self, row):
        def getId():
            return self.table.item(row, 0).text()

        def getInfo():
            id = getId()
            result = self.staffController.getOneStaff(id)
            if result.success == False:
                QtWidgets.QMessageBox.warning(None, "Thông báo", result.message)
                return
            return result.data

        def showStaffOnView():
            staff: Staff = getInfo()
            self.idnv.setText(staff.idnv)
            self.name.setText(staff.name)
            self.sdt.setText(staff.sdt)
            self.email.setText(staff.email)

            if staff.sex == 1:
                self.nam.setChecked(True)
            elif staff.sex == 0:
                self.nu.setChecked(True)

            if staff.rank == "staff":
                self.rank.setCurrentIndex(0)

            if staff.blockAt is not None:
                self.block_radio.setChecked(True)
            else:
                self.block_radio.setChecked(False)

            self.clickRow = row

        return showStaffOnView

    def banChangeBlock(self, event):
        QtWidgets.QMessageBox.warning(None, "Thông báo", "Không thể thay đối")
        return

    def findStaff(self, event):
        id = self.find_id.text()
        name = self.find_name.text()

        result = self.staffController.findStaff(id, name)
        if result.success is False:
            QtWidgets.QMessageBox.warning(None, "Thông báo", result.message)
            return

        self.addTableData(result.data)
        return

    def updateStaff(self, event):
        if self.block_radio.isChecked() is True:
            toast.toastWarning("Không thể đổi tài khoản đã khoá")
            return

        _sex = self.getSex()
        if _sex is None:
            toast.toastWarning("Giới tính không hợp lệ")
            return

        staff = Staff(
            idnv=self.idnv.text(),
            name=self.name.text(),
            sdt=self.sdt.text(),
            email=self.email.text(),
            sex=_sex,
            rank=self.rank.currentText(),
        )

        update = self.staffController.updateStaff(staff)

        if update.success is False:
            toast.toastWarning(update.message)
            return

        toast.toastInfo("Cập nhật thành công")
        self.table.setItem(self.clickRow, 1, QtWidgets.QTableWidgetItem(staff.name))
        self.table.setItem(self.clickRow, 2, QtWidgets.QTableWidgetItem(staff.email))
        return

    def updatePassword(self, event):
        if self.block_radio.isChecked() is True:
            toast.toastWarning("Không thể đổi tài khoản đã khoá")
            return

        idnv = self.idnv.text()

        update = self.staffController.updateNewPassword(idnv)

        if update.success is False:
            toast.toastWarning(update.message)
            return
        pyperclip.copy(update.data)
        toast.toastInfo(f"""Đã lưu vào bộ nhớ tạm.\nMật khẩu mới là: {update.data}""")
        return

    def blockStaff(self, event):
        idnv = self.idnv.text()

        if self.block_radio.isChecked():
            toast.toastInfo(f"{idnv} đã bị khoá trước đó")
            return

        result = self.staffController.blockStaff(idnv)

        if result.success is False:
            toast.toastWarning(result.message)
            return

        toast.toastInfo(f"Đã khoá: {idnv}")

    def showAllStaff(self):
        staffs = self.staffController.getAllStaffForTable()
        self.addTableData(staffs)

    def getSex(self):
        if self.nam.isChecked() is True:
            return 1
        elif self.nu.isChecked() is True:
            return 0
        else:
            return None


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    info = QtWidgets.QMainWindow()
    ui = Ui_info()
    ui.setupUi(info)
    info.show()
    sys.exit(app.exec())
